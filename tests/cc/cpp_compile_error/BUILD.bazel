load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("//matcher:defs.bzl", "matcher")
load("//tests/cc:utils.bzl", "check_build_and_test")

check_build_and_test(
    name = "plain",
    src = "cpp_compile_error.cpp",
)

check_build_and_test(
    name = "with_substr_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.has_substr("for cpp_compile_error.cpp"),
)

check_build_and_test(
    name = "with_basic_regex_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.contains_basic_regex(r"for[[:space:]]cpp_compile_error\.\(cpp\|cxx\)"),
)

check_build_and_test(
    name = "with_extended_regex_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.contains_extended_regex(r"for[[:space:]]cpp_compile_error\.(cpp|cxx)"),
)

build_test(
    name = "build_test",
    targets = [
        ":plain",
        ":with_substr_matcher",
        ":with_basic_regex_matcher",
        ":with_extended_regex_matcher",
    ],
)

# Test case which should fail to build
check_build_and_test(
    name = "incorrect_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.has_substr("Incorrect matcher"),
    tags = ["manual"],
)
