load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("//matcher:defs.bzl", "matcher")
load("//tests/cc:utils.bzl", "check_build_and_test")

check_build_and_test(
    name = "using_copts_plain",
    src = "cpp_compile_error.cpp",
    copts = ['-DCAUSE_COMPILATION_ERROR=static_assert(false, "Compile error message for cpp_compile_error.cpp")'],
)

check_build_and_test(
    name = "using_copts_with_substr_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.has_substr("for cpp_compile_error.cpp"),
    copts = ['-DCAUSE_COMPILATION_ERROR=static_assert(false, "Compile error message for cpp_compile_error.cpp")'],
)

check_build_and_test(
    name = "using_copts_with_basic_regex_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.contains_basic_regex(r"for[[:space:]]cpp_compile_error\.\(cpp\|cxx\)"),
    copts = ['-DCAUSE_COMPILATION_ERROR=static_assert(false, "Compile error message for cpp_compile_error.cpp")'],
)

check_build_and_test(
    name = "using_copts_with_extended_regex_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.contains_extended_regex(r"for[[:space:]]cpp_compile_error\.(cpp|cxx)"),
    copts = ['-DCAUSE_COMPILATION_ERROR=static_assert(false, "Compile error message for cpp_compile_error.cpp")'],
)

check_build_and_test(
    name = "using_local_defines_plain",
    src = "cpp_compile_error.cpp",
    local_defines = ['CAUSE_COMPILATION_ERROR=static_assert(false, "Compile error message for cpp_compile_error.cpp")'],
)

check_build_and_test(
    name = "using_local_defines_with_substr_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.has_substr("for cpp_compile_error.cpp"),
    local_defines = ['CAUSE_COMPILATION_ERROR=static_assert(false, "Compile error message for cpp_compile_error.cpp")'],
)

check_build_and_test(
    name = "using_local_defines_with_basic_regex_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.contains_basic_regex(r"for[[:space:]]cpp_compile_error\.\(cpp\|cxx\)"),
    local_defines = ['CAUSE_COMPILATION_ERROR=static_assert(false, "Compile error message for cpp_compile_error.cpp")'],
)

check_build_and_test(
    name = "using_local_defines_with_extended_regex_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.contains_extended_regex(r"for[[:space:]]cpp_compile_error\.(cpp|cxx)"),
    local_defines = ['CAUSE_COMPILATION_ERROR=static_assert(false, "Compile error message for cpp_compile_error.cpp")'],
)

build_test(
    name = "build_test",
    targets = [
        ":using_copts_plain",
        ":using_copts_with_substr_matcher",
        ":using_copts_with_basic_regex_matcher",
        ":using_copts_with_extended_regex_matcher",
        ":using_local_defines_plain",
        ":using_local_defines_with_substr_matcher",
        ":using_local_defines_with_basic_regex_matcher",
        ":using_local_defines_with_extended_regex_matcher",
    ],
)
