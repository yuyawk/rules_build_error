load("//lang/cc:defs.bzl", "cc_build_error")
load("//matcher:defs.bzl", "matcher")
load("@bazel_skylib//rules:build_test.bzl", "build_test")

cc_build_error(
    name = "plain",
    src = "cpp_compile_error.cpp",
    local_defines = ["MACRO_IN_LOCAL_DEFINES"],
)

cc_build_error(
    name = "with_substr_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.has_substr("With local_defines, "),
    local_defines = ["MACRO_IN_LOCAL_DEFINES"],
)

cc_build_error(
    name = "with_basic_regex_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.contains_basic_regex("With local_defines, this.*"),
    local_defines = ["MACRO_IN_LOCAL_DEFINES"],
)

cc_build_error(
    name = "with_extended_regex_matcher",
    src = "cpp_compile_error.cpp",
    compile_stderr = matcher.contains_extended_regex("With local_defines, this.*"),
    local_defines = ["MACRO_IN_LOCAL_DEFINES"],
)

build_test(
    name = "build_test",
    targets = [
        ":plain",
        ":with_substr_matcher",
        ":with_basic_regex_matcher",
        ":with_extended_regex_matcher",
    ],
)
