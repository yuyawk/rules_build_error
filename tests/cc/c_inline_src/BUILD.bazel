load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("//lang/cc:defs.bzl", "inline_src")
load("//matcher:defs.bzl", "matcher")
load("//tests/cc:utils.bzl", "check_build_and_test")

check_build_and_test(
    name = "plain",
    src = inline_src.c('#include <assert.h> \n int main(void) { static_assert(0, "Compile error message for inline src"); }'),
)

check_build_and_test(
    name = "with_substr_matcher",
    src = inline_src.c('#include <assert.h> \n int main(void) { static_assert(0, "Compile error message for inline src"); }'),
    compile_stderr = matcher.has_substr("static assertion failed"),
)

check_build_and_test(
    name = "with_basic_regex_matcher",
    src = inline_src.c('#include <assert.h> \n int main(void) { static_assert(0, "Compile error message for inline src"); }'),
    compile_stderr = matcher.contains_basic_regex(r"static[[:space:]]assertion \(failed\|error\)"),
)

check_build_and_test(
    name = "with_extended_regex_matcher",
    src = inline_src.c('#include <assert.h> \n int main(void) { static_assert(0, "Compile error message for inline src"); }'),
    compile_stderr = matcher.contains_extended_regex(r"static[[:space:]]assertion (failed|error)"),
)

build_test(
    name = "build_test",
    targets = [
        ":plain",
        ":with_substr_matcher",
        ":with_basic_regex_matcher",
        ":with_extended_regex_matcher",
    ],
)
